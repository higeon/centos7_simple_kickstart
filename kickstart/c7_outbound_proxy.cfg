#version=RHEL7

# Repo: https://github.com/ohdns/centos7_simple_kickstart.git

install

# get netinstall image from a mirror and then validate sha256sum from
# https://wiki.centos.org/Manuals/ReleaseNotes/CentOS7

# mirror repo, validate gpg sigs for all RPM's, then serve them internally
# to save bandwidth and get reproducable results.
# Internal repo mirrors must not be more than 3 months behind the public mirrors.

# use --install with internal repos
url --url=http://192.168.120.10/mirror/centos/7/os/x86_64/
repo --cost=1 --name=extras --baseurl=http://192.168.120.10/mirror/centos/7/extras/x86_64/
repo --cost=1 --name=updates --baseurl=http://192.168.120.10/mirror/centos/7/updates/x86_64/
repo --cost=2 --name=EPEL --baseurl=http://192.168.120.10/mirror/epel/7/x86_64/

cmdline
#text
skipx

firstboot --disable
keyboard --vckeymap=us --xlayouts='us'
#monitor --noprobe

lang en_US.UTF-8

eula --agreed

network --noipv6 --bootproto=static --ip=192.168.120.15 --netmask=255.255.255.0 --onboot=yes --activate

# logging --host=192.168.120.10

authconfig --enableshadow --passalgo=sha512 --disablefingerprint --updateall

# authconfig --enableshadow --passalgo=sha512 --enableldap --enableldapauth --ldapserver=ldap://192.168.120.10:389/ --ldapbasedn="dc=somedomain,dc=com" --enablecache --disablefingerprint --kickstart --updateall



selinux --enforcing

# this is a default silly password, on purpose.  change this to your own hash.
rootpw --iscrypted $6$20151013$cIgj/AU9/8fDQsiTfqw5D6qtE9.KRi5l46IToNAjE0RxFA8g.7uiK/f2XJ4CRdvc7CgyJMf4lKwGL/yMrlfcF/

services --enabled="ntpd,sshd,network,auditd,restorecond,iptables.service,ip6tables.service,rsyslog,postfix,named"
services --disabled="avahi-daemon.socket,avahi-daemon.service,tuned.service"


# System timezone
timezone UTC --isUtc --ntpservers=192.168.120.10

# for first access via ansible or other config management
# this is a default silly password, on purpose.  change this to your own hash.
user --groups=wheel --homedir=/home/ohadmin --name=ohadmin --password=$6$20151013$cIgj/AU9/8fDQsiTfqw5D6qtE9.KRi5l46IToNAjE0RxFA8g.7uiK/f2XJ4CRdvc7CgyJMf4lKwGL/yMrlfcF/ --iscrypted --uid=99990 --gecos="Anisble Automation" --gid=99990

## for debugging installation, may not work on c7 yet. nor does sshkey
# sshpw --username=ohadmin --password=$6$20151013$cIgj/AU9/8fDQsiTfqw5D6qtE9.KRi5l46IToNAjE0RxFA8g.7uiK/f2XJ4CRdvc7CgyJMf4lKwGL/yMrlfcF/ --iscrypted


#ignoredisk --only-use=sda
#bootloader --location=mbr --boot-drive=sda --append="console=ttyS1,115200 text elevator=noop selinux=1 noparport audit=1"
bootloader --location=mbr --boot-drive=sda

zerombr
clearpart --drives=sda --all --initlabel
part /boot --fstype=xfs --ondisk=sda --size=256 --asprimary --fsoptions="defaults,noatime,inode64"
# this disk password should really be derrived from a cgi template that looks at
#  input from the user, or a combination of their ldap/ad creds and 2FA.
#  perhaps use something like Vault for this.
#part pv.1 --size=2 --ondisk=sda --grow --encrypted --passphrase=centos7
part pv.1 --size=2 --ondisk=sda --grow
volgroup vg00 --pesize=32768 pv.1
logvol / --fstype=xfs --vgname=vg00 --size=3192 --name=rootfs --fsoptions="defaults,noatime,inode64"
#
# most of the space in /var/spool, then in /var/log for mail logs
logvol /var --fstype=xfs --vgname=vg00 --size=3192 --name=var --fsoptions="defaults,noatime,inode64"
logvol /var/spool --fstype=xfs --vgname=vg00 --size=2048 --name=vspool --fsoptions="defaults,noatime,inode64"
logvol /var/log --fstype=xfs --vgname=vg00 --size=2048 --name=vlog --fsoptions="defaults,noatime,inode64"
logvol /var/log/audit --fstype=xfs --vgname=vg00 --size=256 --name=vaudit --fsoptions="defaults,noatime,inode64"
#
# try to discourage people from saving things locally in /home.  build automation ftw.
#  why?  wont be running from /home in customer environments.
#  custom x86_64 apps should be in a uniqe named dir in /opt
#  custom proprietary code should be in /data
#  /home is for snowflakes.  /home is ephemeral.  Long live /home.
#  but seriously, check everything in.  build and deploy artifacts.  everything else is a melting snowflake.
#
logvol /home --fstype=xfs --vgname=vg00 --size=512 --name=home --fsoptions="defaults,noatime,inode64,uquota,gquota"

# man pages are online, or you could use a management server to read the man pages.
# they are just a waste of space on our little virtual machines.
%packages --nobase --nocore --ignoremissing --excludedocs
@core --nodefaults
audit
autofs
bind
bind-utils
bzip2
pbzip2
ccze
cryptsetup
ethtool
fail2ban-systemd
grubby
iftop
iperf3
iptables-services
libselinux-python
libselinux-utils
lftp
lvm2
mtr
net-tools
openssh-server
policycoreutils-python
policycoreutils-restorecond
rsync
ntp
postfix
rsyslog
screen
setools-console
sudo 
sysstat
tcp_wrappers
xz
yum-cron
yum-updateonboot
#
# troubleshooting tools
lsof
strace
tcpdump
#
-ModemManager-glib
-NetworkManager*
-kdump
-aic94xx-firmware
-aic94xx-firmware*
-alsa-*
-alsa-firmware
-biosdevname
-btrfs-progs
-btrfs-progs*
-cyrus-sasl
-dracut-network
-dhcp*
-dhclient
-efiboot*
-fcoe*
-fipscheck
-firmware*
-groff-base
-info
-iprutils
-iscsi*
-ivtv* 
-ivtv-firmware
-iwl*firmware
-kexec-tools
-kernel-debug
-less
-libertas*
-linux-firmware
-man
-man-db
-mysql-libs
-firewalld
-plymouth
-plymouth-scripts
-plymouth-core-libs
-prelink
-rhpl
-wireless-tools
-wpa_supplicant
%end


%pre
printf "\nPRE\n"

%end



# START POST
%post
exec < /dev/console > /dev/console

KSDATE=`date '+%Y%m%d.%H%M'`
export KSDATE

echo "PRELINKING=no" >> /etc/sysconfig/prelink

sed -i -e 's/plugins=1/plugins=0/g' /etc/yum.conf

# keep current
set -i -e 's/^update_messages.*/update_messages = yes/g' /etc/yum/yum-cron-hourly.conf
set -i -e 's/^download_updates.*/download_updates = yes/g' /etc/yum/yum-cron-hourly.conf
set -i -e 's/^apply_updates.*/apply_updates = yes/g' /etc/yum/yum-cron-hourly.conf
set -i -e 's/^email_to.*/email_to = devnull/g' /etc/yum/yum-cron-hourly.conf


mkdir --mode=0711 -p /etc/ssh/keys
curl -A Mozilla http://192.168.120.10/proxy.pub.txt -o /etc/ssh/keys/ohadmin
chmod 0400 /etc/ssh/keys/ohadmin
chown ohadmin:ohadmin /etc/ssh/keys/ohadmin


cat << zzzRSYSLOG_GLOBALzzz > /etc/rsyslog.conf

# rsyslog
\$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
\$ModLoad imjournal # provides access to the systemd journal
\$WorkDirectory /var/lib/rsyslog
\$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
\$ActionFileEnableSync off
\$IncludeConfig /etc/rsyslog.d/*.conf
\$OmitLocalLogging on
\$IMJournalStateFile imjournal.state
\$FileOwner root
\$FileGroup wheel
\$DirOwner root
\$DirGroup wheel
\$DirCreateMode 0700
\$FileCreateMode 0600
\$PreserveFQDN off
\$RepeatedMsgReduction on
kern.*                       /dev/console
*.emerg                      :omusrmsg:*
#
# we even send to oursevles if this is the syslog server.
*.*,cron.none   @192.168.120.10:514

zzzRSYSLOG_GLOBALzzz

cat << zzzRSYSLOG_SERVERzzz > /etc/rsyslog.d/10_server.conf

\$ModLoad imudp
\$UDPServerRun 514
\$ModLoad imtcp
\$InputTCPServerRun 514
\$template ohsyslog,"/var/log/syslog/%HOSTNAME%/%syslogfacility-text%.log"
\$template RFC3164fmt,"<%PRI%>%TIMESTAMP% %HOSTNAME% %syslogtag%%msg%\n"
:inputname, isequal, "imudp" ?ohsyslog;RFC3164fmt
& ~

zzzRSYSLOG_SERVERzzz




# set ramdisk size, let conf mgmt adjust later if required
printf "tmpfs\t/dev/shm\ttmpfs\tdefaults,noatime,nosuid,nodev,size=128m 0 0\n" >> /etc/fstab
printf "devpts\t/dev/pts\tdevpts\tgid=5,mode=620 0 0\n" >> /etc/fstab
# uncomment if you want home to be transient, perhaps remove _logvol_ for home near top
# printf "tmpfs\t/home\ttmpfs\tdefaults,noatime,size=255m 0 0\n" >> /etc/fstab
printf "sysfs\t/sys\tsysfs\tdefaults 0 0\n#${KSDATE}\n" >> /etc/fstab


cat << zzzIPTABLESzzz > /etc/sysconfig/iptables
#${KSDATE}
*security
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
*raw
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
#
# accept icmp in the raw table to avoid state table hits.
-A PREROUTING -p icmp --icmp-type any -s 192.168.0.0/16 -j ACCEPT
-A PREROUTING -p icmp --icmp-type any -j DROP
-A PREROUTING -s 169.254.0.0/16 -j DROP
#
# drop multicast. only remove this is you REALLY need multicast.
-A PREROUTING -s 224.0.0.0/5 -j DROP
#
# drop fragmented packets. HTTPS will never be fragmented and most applications won't do this.
-A PREROUTING -f -j DROP
#
# drop some simple nmap scans.
-A PREROUTING -p tcp --tcp-flags ALL NONE -j DROP
-A PREROUTING -p tcp --tcp-flags ALL ALL -j DROP
-A PREROUTING -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
-A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
-A PREROUTING -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP
-A PREROUTING -p tcp --tcp-flags ALL FIN -j DROP
#
# accept icmp in the raw table to avoid state table hits.
-A OUTPUT -p icmp --icmp-type any -d 192.168.0.0/16 -j ACCEPT
-A OUTPUT -p icmp --icmp-type any -j DROP
COMMIT
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
*filter
# this is the default iptables table that everyone knows and loves.
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
#
# accept packets on the loopback.
-A INPUT -i lo -j ACCEPT
#
# drop sctp, because we wont likely ever see it in the real world,
# and most implementations of it have serious flaws.
-A INPUT -p sctp -j DROP
#
#
# ADD CUSTOM SERVICES HERE BELOW THIS LINE
#
# bind named inbound
-A INPUT -m udp -p udp --dport 53 -j ACCEPT
#
# postfix inbound
-A INPUT -m tcp -p tcp --dport 25 -j ACCEPT
#
# example:
# ssh with limits to avoid some forms of brute forcing.
# if you find automation is breaking because of this, please reconsider your automation method.
-A INPUT -m tcp -p tcp --syn --dport 22 -m limit --limit 4/min --limit-burst 4 -j ACCEPT
#
#
#
# DANGEROUS RULES:
#       Let everything IN because we are testing.
#       We could log all of our connections to profile an application,
#       or look for existing iptables templates for our applications.
#       If the application has a proper root init script, we can even dynamically
#       inject rules when we start the app instead of mucking with system files.
#
# ______________________________
-A INPUT -m tcp -p tcp -j ACCEPT
-A INPUT -m udp -p udp -j ACCEPT
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#  ^ remove this once you have profiled your applications
#    and your automation helps build the iptables rules.
#    We break this down into UDP and TCP so you can disable
#    one if you know you don't need it.
#
#
#
# END CUSTOM SERVICES
#
# drop packets that are not valid in our state table.
-A INPUT -m state --state INVALID -j DROP
#
# allow packets that are valid in our state table.
# Try to avoid hitting this rule, as it is potentially CPU expensive.
-A INPUT -m state --state ESTABLISHED -j ACCEPT
#
# debugging, visible in dmesg and syslog. please consider the impact on syslog servers.
# -A INPUT -m limit --limit 1/second --limit-burst 1 -m tcp -p tcp -j LOG --log-prefix="INPUT_TCP: " --log-ip-options --log-tcp-options --log-level 7
# -A INPUT -m limit --limit 1/second --limit-burst 1 -m udp -p udp -j LOG --log-prefix="INPUT_UDP: " --log-ip-options --log-level 7
#
-A INPUT -j DROP
#
# END of "filter" table INPUT chain.
#
#
#
# we are not a router, so drop forwarded packets.
# NOTE: if we are a software defined router, this has to be set to ACCEPT
-A FORWARD -j DROP
#
#
#
#
# drop OUTBOUND packets that are not valid, first.
# applications may trip over this one if their tcp implementation was written in a hurry.
-A OUTPUT -m state --state INVALID -j DROP
#
#
# bind named outbound
-A OUTPUT -m udp -p udp --dport 53 -j ACCEPT
#
# postfix outbound
-A OUTPUT -m tcp -p tcp --dport 25 -j ACCEPT
#
#
# allow packets that are valid in our state table. This rule is potentially expensive.
-A OUTPUT -m state --state ESTABLISHED -j ACCEPT
#
# accept packets destin for 127.0.0.1 and not the entire /8.
-A OUTPUT -s 127.0.0.1/32 -d 127.0.0.1/32 -j ACCEPT
#
#
# Put specific outbound services below this line.
# -A OUTPUT blah blah blah
#
#
#
# DANGEROUS RULES:
#       Let everything OUT because we are testing.
#       We could log all of our connections to profile an application,
#       or look for existing iptables templates for our applications.
#
# ______________________________
-A OUTPUT -m tcp -p tcp -j ACCEPT
-A OUTPUT -m udp -p udp -j ACCEPT
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#  ^ remove this once you have profiled your applications
#    and your automation helps build the iptables rules.
#    We break this down into UDP and TCP so you can disable
#    one if you know you don't need it.
#    If we are using proper root init scripts to start our application,
#    we could simply inject the proper rules on start-up instead of
#    mucking with system configuration files.
#
#
#
# explicit drop if the above dangerous rules are not enabled.
-A OUTPUT -j DROP
#
#
# END CUSTOM SERVICES
#
# catchall logging rules just in case we think iptables is breaking our application.
-A OUTPUT -m tcp -p tcp --syn -j LOG --log-prefix="OUTPUT_TCP: " --log-uid --log-level 7
-A OUTPUT -m udp -p udp -j LOG --log-prefix="OUTPUT_UDP: " --log-uid --log-level 7
-A OUTPUT -m tcp -p tcp -j REJECT --reject-with tcp-reset
-A OUTPUT -j DROP
COMMIT
#${KSDATE}

zzzIPTABLESzzz


cat << zzzIP6TABLESzzz > /etc/sysconfig/ip6tables
#${KSDATE}
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]
COMMIT
#${KSDATE}

zzzIP6TABLESzzz


cat << zzzSYSCTLzzz > /etc/sysctl.conf
#${KSDATE}
fs.file-max = 1000000
fs.dir-notify-enable = 1
# inotify required for FIM, AntiVirus, some automation.
fs.inotify.max_queued_events = 1024000
fs.inotify.max_user_instances = 1024000
fs.inotify.max_user_watches = 32768
fs.leases-enable = 1
fs.lease-break-time = 50
fs.suid_dumpable = 0
kernel.acct = 35 25 90
kernel.core_pattern = /tmp/core.%s.%u.%g.%p.%t
kernel.core_uses_pid = 1
kernel.pid_max = 1999999
kernel.ctrl-alt-del = 0
# wait long enough on panic for iDrac/ilo to capture stack trace
kernel.panic = 20
kernel.panic_on_oops = 20
kernel.printk = 2 4 2 7
kernel.hung_task_timeout_secs = 180
kernel.sem = 1024 512000 1024 4096
kernel.shmall = 4294967296
kernel.shmmax = 137438953472
kernel.shmmni = 4096
kernel.msgmni = 32768
kernel.msgmnb = 65536
kernel.msgmax = 65536
kernel.sysrq = 1
kernel.kptr_restrict = 2
kernel.dmesg_restrict = 1
kernel.randomize_va_space = 2
# set nmi_watchdog to 0 on laptop or embeded.
#     nmi_watchdog to 1 on servers.
kernel.nmi_watchdog = 1
kernel.hung_task_timeout_secs = 220
kernel.perf_event_paranoid = 2
net.core.optmem_max = 4096000
net.core.rmem_default = 32768
net.core.wmem_default = 32768
# reduce mem max and default on internet facing servers
# to reduce chances of memory depletion.
net.core.rmem_max = 1536400000
net.core.wmem_max = 1536000000
net.core.message_burst = 40
# somaxconn half-open connections allowed
net.core.somaxconn = 32768
# set tcp_abort_on_overflow to 1 to fail fast behind a load balancer.
net.ipv4.tcp_abort_on_overflow = 0
net.core.netdev_max_backlog = 409600
# set sched_migration_cost_ns MUCH higher for heavy forking daemons
# such as Apache using mpm_prefork or PostgreSQL.
kernel.sched_migration_cost_ns = 500000
# disable ipv6, sorry.
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv4.conf.all.log_martians = 1
# handle timeouts on short lived connections better from client perspective.
net.ipv4.tcp_thin_linear_timeouts = 1
net.ipv4.tcp_thin_dupack = 1
net.ipv4.ip_nonlocal_bind = 0
net.ipv4.conf.all.shared_media = 0
net.ipv4.tcp_challenge_ack_limit = 480
net.ipv4.ip_forward = 0
net.ipv4.tcp_mtu_probing = 1
# reduce mem max and default on internet facing servers
# to reduce chances of memory depletion.
net.ipv4.udp_mem = 98304 153600 40960000
net.ipv4.tcp_mem = 98304 153600 40960000
net.ipv4.udp_rmem_min = 4096
net.ipv4.udp_wmem_min = 4096
net.ipv4.tcp_rmem = 32768 131070 1536800000
net.ipv4.tcp_wmem = 10240 131070 1536000000
net.ipv4.conf.all.accept_redirects = 0
# arp_notify 1 required in many virtualized environments
# for proper migration of VM or SDN changes.
net.ipv4.conf.all.arp_notify = 1
net.ipv4.conf.default.arp_notify = 1
net.ipv4.conf.all.arp_announce = 0
net.ipv4.conf.all.arp_filter = 0
net.ipv4.conf.all.arp_ignore = 0
net.ipv4.conf.all.bootp_relay = 0
net.ipv4.conf.all.proxy_arp = 0
net.ipv4.conf.all.rp_filter = 2
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.arp_announce = 0
net.ipv4.conf.default.arp_filter = 0
net.ipv4.conf.default.arp_ignore = 0
net.ipv4.conf.default.log_martians = 1
net.ipv4.conf.default.proxy_arp = 0
net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.lo.arp_announce = 0
net.ipv4.conf.lo.arp_filter = 0
net.ipv4.conf.lo.arp_ignore = 0
net.ipv4.conf.lo.log_martians = 1
net.ipv4.conf.lo.proxy_arp = 0
net.ipv4.conf.lo.secure_redirects = 0
net.ipv4.conf.lo.send_redirects = 0
net.ipv4.icmp_echo_ignore_all = 0
net.ipv4.icmp_echo_ignore_broadcasts = 0
net.ipv4.icmp_ignore_bogus_error_responses = 1
# apply icmp rate limit to all ICMP
net.ipv4.icmp_ratemask = 88089
# 1000 jiffies between replies
net.ipv4.icmp_ratelimit = 1000
# raise ttl due to some VPN+WAN implementations.
net.ipv4.ip_default_ttl = 127
# dont spend much time on fragmented packets.
net.ipv4.ipfrag_time = 10
net.ipv4.ipfrag_max_dist = 220
net.ipv4.xfrm4_gc_thresh = 131070
net.ipv4.route.gc_thresh = 131070
net.ipv4.route.mtu_expires = 10000
net.ipv4.route.gc_interval = 2000
net.ipv4.route.gc_timeout = 2000
# leave ip_local_port_range wide, then customize
# ip_local_reserved_ports for listeners per server role.
net.ipv4.ip_local_port_range = 1024 65535
# ip_local_reserved_ports is role specific
# override this with configuration management such as ansible.
net.ipv4.ip_local_reserved_ports = 5666,65520-65535
net.ipv4.ip_no_pmtu_disc = 0
net.sctp.auth_enable = 1
net.netfilter.nf_conntrack_helper = 0
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-arptables = 0
net.netfilter.nf_conntrack_acct = 1
net.netfilter.nf_conntrack_events = 1
# increase state table limits.
net.nf_conntrack_max = 128000
net.ipv4.netfilter.ip_conntrack_max = 128000
net.ipv4.netfilter.ip_conntrack_checksum = 0
net.ipv4.netfilter.ip_conntrack_tcp_be_liberal = 0
net.ipv4.netfilter.ip_conntrack_tcp_loose = 0
net.ipv4.netfilter.ip_conntrack_tcp_max_retrans = 63
net.ipv4.netfilter.ip_conntrack_tcp_timeout_max_retrans = 63
net.ipv4.netfilter.ip_conntrack_icmp_timeout = 2
net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_recv = 30
net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_sent = 120
net.ipv4.netfilter.ip_conntrack_tcp_timeout_close = 60
net.ipv4.netfilter.ip_conntrack_tcp_timeout_time_wait = 120
net.ipv4.netfilter.ip_conntrack_tcp_timeout_last_ack = 60
net.ipv4.netfilter.ip_conntrack_tcp_timeout_close_wait = 60
net.ipv4.netfilter.ip_conntrack_tcp_timeout_fin_wait = 60
net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 172800
net.ipv4.netfilter.ip_conntrack_udp_timeout_stream = 60
net.ipv4.netfilter.ip_conntrack_udp_timeout = 60
net.netfilter.nf_conntrack_generic_timeout = 300
net.netfilter.nf_conntrack_tcp_timeout_close = 8
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 50
net.netfilter.nf_conntrack_tcp_timeout_established = 172800
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 60
net.netfilter.nf_conntrack_tcp_timeout_last_ack = 60
net.netfilter.nf_conntrack_tcp_timeout_max_retrans = 63
net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 30
net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 120
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120
net.netfilter.nf_conntrack_tcp_timeout_unacknowledged = 120
net.netfilter.nf_conntrack_udp_timeout = 30
net.netfilter.nf_conntrack_udp_timeout_stream = 60
net.netfilter.nf_conntrack_udplite_timeout = 30
net.netfilter.nf_conntrack_udplite_timeout_stream = 60
# set nf_conntrack_log_invalid and ip_conntrack_log_invalid
# to 255 to log invalid packets.
net.netfilter.nf_conntrack_log_invalid = 0
net.ipv4.netfilter.ip_conntrack_log_invalid = 0
net.ipv4.tcp_fastopen = 0
net.ipv4.tcp_adv_win_scale = 2
net.ipv4.tcp_app_win = 31
net.ipv4.tcp_low_latency = 0
net.ipv4.tcp_ecn = 2
net.ipv4.tcp_frto = 0
#net.ipv4.tcp_frto_response = 0
net.ipv4.tcp_congestion_control = cubic
# in conjunction with tcp_slow_start_after_idle,
# also look into initcwnd and initrwnd, configurable
# by ip route change to default gw.
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_fin_timeout = 40
net.ipv4.tcp_keepalive_time = 30
net.ipv4.tcp_keepalive_intvl = 30
net.ipv4.tcp_keepalive_probes = 4095
net.ipv4.tcp_max_syn_backlog = 32768
net.ipv4.tcp_max_tw_buckets = 2048000
# set tcp_tw_recycle to 0 on devices behind load balancers.
# set tcp_tw_recycle to 1 on everything else to avoid socket depletion.
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_moderate_rcvbuf = 1
net.ipv4.tcp_no_metrics_save = 0
net.ipv4.tcp_max_orphans = 16384
net.ipv4.tcp_orphan_retries = 7
net.ipv4.tcp_reordering = 7
net.ipv4.tcp_retrans_collapse = 1
net.ipv4.tcp_retries1 = 4
net.ipv4.tcp_retries2 = 12
# disable sack, fack and dsack on low latency devices,
# such as telephony and game servers.
net.ipv4.tcp_sack = 1
net.ipv4.tcp_fack = 1
net.ipv4.tcp_dsack = 1
net.ipv4.tcp_rfc1337 = 0
# syncookies is a mixed bag.
# use on public internet facing devices only.
net.ipv4.tcp_syncookies = 0
net.ipv4.tcp_syn_retries = 4
net.ipv4.tcp_synack_retries = 4
# timestamps are some overhead, but reduce some
# cases of retransmission.
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.cipso_cache_enable = 0
net.unix.max_dgram_qlen = 192
# allow slightly more un-ack packets.
net.ipv4.neigh.default.proxy_qlen = 74
net.ipv4.neigh.default.unres_qlen = 9
net.ipv4.neigh.default.unres_qlen_bytes = 32767
net.ipv4.neigh.lo.proxy_qlen = 192
net.ipv4.neigh.lo.unres_qlen = 9
net.ipv4.neigh.lo.unres_qlen_bytes = 32767
# high locktime to avoid frequent changes of arp.
# lower this on L2 load balanced solutions.
net.ipv4.neigh.default.locktime = 39999
net.ipv4.neigh.lo.locktime = 39999
# minimize arp table gc to lower latency and chatter.
net.ipv4.neigh.default.gc_interval = 2000
net.ipv4.neigh.default.gc_stale_time = 2000
net.ipv4.neigh.default.gc_thresh1 = 2000
net.ipv4.neigh.default.gc_thresh2 = 3000
net.ipv4.neigh.default.gc_thresh3 = 4000
# increase inet_peer_threshold even higher on routers.
net.ipv4.inet_peer_threshold = 65535
# uncomment sunrpc entries on nfs servers.
# modify /etc/sysconfig/nfs: RPCNFSDCOUNT to match
#sunrpc.tcp_slot_table_entries = 127
#sunrpc.udp_slot_table_entries = 127
# if you are doing perf debugging of the kernel or
# interrupts, then lower stat_interval in your test scripts.
vm.stat_interval = 10
vm.lowmem_reserve_ratio = 512 384 64
vm.admin_reserve_kbytes = 32768
vm.user_reserve_kbytes = 262144
vm.min_free_kbytes = 266240
vm.max_map_count = 262144
# set vfs_cache_pressure to 10000 to prefer pagecache.
# set vfs_cache_pressure to 200 on file servers.
vm.vfs_cache_pressure = 10000
# panic_on_oom 2 to self heal.
# panic_on_oom 1 may leave us broken, requires console, impacts SLA.
vm.panic_on_oom = 2
vm.dirty_ratio = 80
vm.dirty_background_ratio = 20
vm.swappiness = 0
vm.overcommit_memory = 0
# unix vs. linux behavior for overcommit_ratio.
vm.overcommit_ratio = 0
vm.page-cluster = 3
vm.dirty_expire_centisecs = 15000
vm.dirty_writeback_centisecs = 2000
# set zone_reclaim_mode to 0 for large databases or file servers.
#                       to 4 for latency sensitive compute nodes.
vm.zone_reclaim_mode = 0
# vm.zone_reclaim_mode = 4
# set laptop_mode to 0 on servers.
#                 to 5 on laptops, embedded devices and tor nodes.
vm.laptop_mode = 0
net.netfilter.nf_conntrack_tcp_loose = 0
net.netfilter.nf_conntrack_tcp_be_liberal = 0
net.netfilter.nf_conntrack_checksum = 0
net.netfilter.nf_conntrack_udplite_timeout = 90
net.netfilter.nf_conntrack_udplite_timeout_stream = 180
net.netfilter.nf_conntrack_tcp_max_retrans = 63
net.netfilter.nf_conntrack_helper = 0
#${KSDATE}

zzzSYSCTLzzz

cat /etc/sysctl.conf > /etc/sysctl.d/16-sysctl.conf


# prefer ipv4 over ipv6
cat << zzzGLIBC_GAIzzz > /etc/gai.conf
label       ::1/128        0
label       ::/0           1
label       2002::/16      2
label       ::/96          3
label       ::ffff:0:0/96  4
precedence  ::1/128        50
precedence  ::/0           40
precedence  2002::/16      30
precedence  ::/96          20
precedence  ::ffff:0:0/96  100

zzzGLIBC_GAIzzz


cat << zzzSSHD_CONFIGzzz > /etc/ssh/sshd_config
#${KSDATE}
AddressFamily				inet
Port					22
Protocol				2
SyslogFacility				AUTHPRIV
LogLevel				VERBOSE
LoginGraceTime				20s
PermitRootLogin				no
MaxStartups				16
MaxAuthTries				8
MaxSessions				1
AuthorizedKeysFile			/etc/ssh/keys/%u
HostKey					/etc/ssh/ssh_host_rsa_key
HostKey					/etc/ssh/ssh_host_ecdsa_key
#
PubkeyAuthentication			yes
PasswordAuthentication			yes
RSAAuthentication			no
ChallengeResponseAuthentication		no
GSSAPIAuthentication			no
HostbasedAuthentication			no
KerberosAuthentication			no
RhostsRSAAuthentication			no
#
IgnoreUserKnownHosts			yes
IgnoreRhosts				yes
GSSAPICleanupCredentials		yes
UsePAM					yes
AcceptEnv				LANG LC_*
AllowAgentForwarding			no
AllowTcpForwarding			no
GatewayPorts				no
X11Forwarding				no
PrintMotd				no
PrintLastLog				no
TCPKeepAlive				yes
UsePrivilegeSeparation			yes
PermitUserEnvironment			no
UseLogin				no
Compression				delayed
ClientAliveInterval			58
ClientAliveCountMax			127
ShowPatchLevel				no
UseDNS					no
PermitTunnel				yes
Subsystem				sftp internal-sftp -l VERBOSE -f AUTHPRIV
#Banner					/etc/ssh/banner.txt
#
# ONLY CHANGE THIS IF YOU UNDERSTAND THE IMPLICATIONS
AllowUsers				ohadmin@192.168.120.*
#
Match User				ohadmin
	PubkeyAuthentication		yes
	PasswordAuthentication		yes
	PermitEmptyPasswords		no
	GatewayPorts			no
	AllowTcpForwarding		no
	HostbasedAuthentication		no
	RhostsRSAAuthentication		no
	AllowAgentForwarding		no
#
Match Group				sftpusers
	PubkeyAuthentication		yes
	PasswordAuthentication		no
	PermitEmptyPasswords		no
	GatewayPorts			no
	ChrootDirectory			/data/sftp/%u
	ForceCommand			internal-sftp
	AllowTcpForwarding		no
	AllowAgentForwarding		no
	PermitRootLogin			no
#${KSDATE}

zzzSSHD_CONFIGzzz


cat << zzzLIMITSzzz > /etc/security/limits.d/16-limits.conf
#${KSDATE}
# hint: * does not match root, but it does match everyone else.
#       This only applies to non systemd initiated services.
#<domain>      <type>  <item>         <value>
*		hard	core		0
*		soft	nofile		32768
*		hard	nofile		131070
*		soft	stack		32768
*		hard	stack		65535
root		soft	stack		32768
root		hard	stack		65535
#
postfix		soft	priority	18
postfix		hard	priority	18
postfix		soft	nofile		512
postfix		hard	nofile		512
#
nobody		soft	priority	19
nobody		hard	priority	19
#
apache		soft	priority	16
apache		hard	priority	16
apache		soft	nofile		32768
apache		hard	nofile		65535
apache		soft	nproc		32768
apache		hard	nproc		131070
#
mysql		soft	priority	10
mysql		hard	priority	10
mysql		soft	nofile		65535
mysql		hard	nofile		131070
#
#${KSDATE}

zzzLIMITSzzz


cat << zzzRCLOCALzzz >> /etc/rc.d/rc.local
#${KSDATE}
for interface in \`/sbin/ip addr | /bin/grep BROAD | /bin/awk {'print \$2'} | /bin/awk -F ":" {'print \$1'}\`
do
/sbin/ifconfig \${interface} txqueuelen 4000
/sbin/ifconfig \${interface} -multicast
/sbin/ethtool -K \${interface} tso off
/sbin/ethtool -K \${interface} ufo off
/sbin/ethtool -K \${interface} gro off
/sbin/ethtool -K \${interface} gso off
/sbin/ethtool -K \${interface} lro off
/sbin/ethtool -K \${interface} rx off
/sbin/ethtool -K \${interface} tx off
/sbin/ethtool -K \${interface} sg off
done
/sbin/sysctl -e -p > /dev/null 2>&1
echo 4096 > /sys/fs/selinux/avc/cache_threshold
#
# change gid to monitoring group eventually
/bin/mount -o remount,hidepid=2,gid=0 /proc
#${KSDATE}

zzzRCLOCALzzz

chmod 1555 /etc/rc.d/rc.local



printf "#${KSDATE}\noptions xt_recent ip_list_tot=1000 ip_pkt_list_tot=30" > /etc/modprobe.d/xt_recent.conf

# disable some vulns
echo "install dccp /bin/false" > /etc/modprobe.d/dccp.conf
echo "install sctp /bin/false" > /etc/modprobe.d/sctp.conf
echo "install rds /bin/false" > /etc/modprobe.d/rds.conf
echo "install tipc /bin/false" > /etc/modprobe.d/tipc.conf
echo "install cramfs /bin/false" > /etc/modprobe.d/cramfs.conf
echo "install freevxfs /bin/false" > /etc/modprobe.d/freevxfs.conf
echo "install jffs2 /bin/false" > /etc/modprobe.d/jffs2.conf
echo "install hfs /bin/false" > /etc/modprobe.d/hfs.conf
echo "install hfsplus /bin/false" > /etc/modprobe.d/hfsplus.conf
echo "install squashfs /bin/false" > /etc/modprobe.d/squashfs.conf
echo "install udf /bin/false" > /etc/modprobe.d/udf.conf
#echo "install usb-storage /bin/true" > /etc/modprobe.d/usb_storage.conf
echo "options loop max_loop=64" > /etc/modprobe.d/max_loop.conf


systemctl mask firewalld
systemctl enable iptables.service
systemctl enable ip6tables.service



# GENERATE CA and server certs for postfix on reboot
cat << zzzPOSTFIXCERTSzzz >> /etc/rc.d/rc.local

# who and where are we
dir="\$(/usr/sbin/postconf -h config_directory)"
fqdn=\$(/usr/sbin/postconf -h myhostname)
ymd=\$(/bin/date +%Y%m%d%H%M)

# create our own CA, no password, replace with your own CA mechanism
umask 077
/usr/bin/openssl genrsa -out \${dir}/\${ymd}.ca.key 2048
/usr/bin/openssl req -new -x509 -sha256 -subj "/CN=\${fqdn}" -days 2600 -key \${dir}/\${ymd}.ca.key -out \${dir}/\${ymd}.ca.crt

# generate key and cert, but replace cert
case \$fqdn in /*) fqdn=\$(cat "\$fqdn");; esac
key="\${dir}/\${ymd}.key"; rm -f "\${key}"
cert="\${dir}/\${ymd}.crt"; rm -f "\${cert}"
(umask 077; /usr/bin/openssl genrsa -out "\${key}" 2048) &&
# /usr/bin/openssl req -new -key "\${key}" -x509 -subj "/CN=\${fqdn}" -days 2600 -out "\${cert}"

# signing request
/usr/bin/openssl req -new -subj "/CN=\${fqdn}" -key \${dir}/\${ymd}.key -out \${dir}/\${ymd}.csr

# sign our signing request
/usr/bin/openssl x509 -req -days 2600 -in \${dir}/\${ymd}.csr -sha256 -CA \${dir}/\${ymd}.ca.crt -CAkey \${dir}/\${ymd}.ca.key -set_serial \${ymd} -out \${dir}/\${ymd}.crt

# update postfix
postconf -e \
    "smtpd_tls_cert_file = \${cert}" \
    "smtpd_tls_key_file = \${key}" \
    "smtp_tls_cert_file = \${cert}" \
    "smtp_tls_key_file = \${key}" \
    "smtpd_tls_CAfile = \${dir}/\${ymd}.ca.crt" \
    "smtp_tls_CAfile = \${dir}/\${ymd}.ca.crt"

zzzPOSTFIXCERTSzzz


cat << zzzPOSTFIXMAINzzz > /etc/postfix/main.cf

# /etc/postfix/main.cf
#
#
# change this
myorigin = smtpmx-outbound.ohdns.net
#
# change this or comment out if open internal relay
mydestination = \$myhostname, localhost.\$mydomain, example.domain
#
# change this
mynetworks =  127.0.0.0/8, 192.168.120.0/24, 10.20.30.40
#
# set this right below your actual mailbox attachment+message size limit.
mailbox_size_limit = 31457280
message_size_limit = 31457280
#
#inet_interfaces = 127.0.0.1
inet_protocols = ipv4
smtp_host_lookup = dns, native
#
# tcp_windowsize may be needed for some old unsupported microsoft servers.
# tcp_windowsize = 4096
strict_rfc821_envelopes = no
strict_mime_encoding_domain = no
resolve_numeric_domain = no
myhostname = \$myorigin
queue_directory = /var/spool/postfix
command_directory = /usr/sbin
#daemon_directory = /usr/libexec/postfix
mail_owner = postfix
#
# LIMITS - FLOWS - some third party hosts block above 4/6, sprint, yahoo, others
#  REMEMBER to add all of your servers together here for total limits.
initial_destination_concurrency = 6
default_destination_concurrency_limit = 10
default_destination_recipient_limit = 10
default_destination_concurrency_failed_cohort_limit = 2
unknown_local_recipient_reject_code = 550
in_flow_delay = 0
max_idle = 600s
default_process_limit = 1000
smtpd_policy_service_max_idle = 600s
daemon_timeout = 24000s
max_use = 1000
biff = no
nis =
notify_classes =
# avoid greylisting
queue_run_delay = 300s
minimal_backoff_time = 900s
maximal_backoff_time = 14400s
maximal_queue_lifetime = 3d
bounce_queue_lifetime = 0s
2bounce_notice_recipient = devnull
bounce_notice_recipient = devnull
delay_warning_time = 0h
header_size_limit = 204800
disable_vrfy_command = yes
expand_owner_alias = no
smtp_connect_timeout = 60s
smtp_mail_timeout = 90s
smtp_helo_timeout = 90s
smtp_quit_timeout = 90s
smtp_rcpt_timeout = 90s
smtp_starttls_timeout = 90s
smtp_mx_session_limit = 30
#
header_checks = regexp:/etc/postfix/header_checks
#
virtual_maps = hash:/data/postfix/virtual
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
#
debug_peer_level = 2
debugger_command =
 PATH=/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin
 xxgdb \$daemon_directory/\$process_name \$process_id & sleep 5
html_directory = no
#
smtpd_error_sleep_time = 0s
smtpd_client_connection_count_limit = 2048
smtpd_peername_lookup = no
smtpd_soft_error_limit = 256
smtpd_hard_error_limit = 512
smtpd_recipient_overshoot_limit = 2000
smtpd_recipient_limit = 1000
smtpd_banner = \$myhostname ESMTP
smtpd_client_port_logging = yes
smtpd_noop_commands = vrfy, expn, auth, connect, options, get, post
#
connection_cache_ttl_limit = 14400s
connection_cache_status_update_time = 86400s
smtp_connection_cache_on_demand = yes
smtp_connection_cache_time_limit = 30s
#
anvil_status_update_time = 86400s
anvil_rate_time_unit = 7200s
#
# we stop processing new messages at this number
qmgr_message_active_limit = 120000
qmgr_message_recipient_limit = 120000
qmgr_clog_warn_time = 240s
#
smtpd_recipient_restrictions =
 permit_mynetworks,
 permit
#
smtpd_etrn_restrictions = permit_mynetworks,
 reject
#
smtpd_data_restrictions =
 reject_multi_recipient_bounce,
 permit
#
smtp_data_xfer_timeout = 300s
#
tls_random_source = dev:/dev/urandom
tls_daemon_random_bytes = 64
tls_high_cipherlist = ALL:!EXPORT:!LOW:!MEDIUM:!aNULL:!eNULL:!MD5:!RC4:@STRENGTH
#
smtp_discard_ehlo_keywords = silent-discard, DSN
smtp_use_tls = yes
smtp_tls_note_starttls_offer = yes
smtp_tls_CAfile = /etc/postfix/ca.crt
smtp_tls_key_file = /etc/postfix/server.key
smtp_tls_cert_file = /etc/postfix/server.crt
smtp_tls_session_cache_database = btree:/var/spool/postfix_cache/smtp_tls_session_cache
#smtp_tls_security_level = encrypt
smtp_tls_security_level = may
smtp_tls_enforce_peername = no
smtp_tls_scert_verifydepth = 4
smtp_tls_loglevel = 1
smtp_tls_ciphers = high
smtp_tls_mandatory_ciphers = high
smtp_tls_protocols = TLSv1, !SSLv2, !SSLv3
smtp_tls_mandatory_protocols = TLSv1, !SSLv3, !SSLv2
smtp_tls_exclude_ciphers = aNULL, eNULL,  MD5, EXPORT
smtp_tls_mandatory_exclude_ciphers = aNULL, eNULL,  MD5
smtp_tls_policy_maps = hash:/etc/postfix/tls_policy

smtpd_discard_ehlo_keywords = silent-discard, DSN
smtpd_client_new_tls_session_rate_limit = 0
#smtpd_tls_dh1024_param_file = /etc/postfix/dhparams.pem
smtpd_tls_CAfile = /etc/postfix/ca.crt
smtpd_tls_key_file = /etc/postfix/server.key
smtpd_tls_cert_file = /etc/postfix/server.crt
smtpd_tls_session_cache_database = btree:/var/spool/postfix_cache/smtpd_tls_session_cache
smtpd_tls_session_cache_timeout = 3600s
smtpd_starttls_timeout = 30s
#smtpd_enforce_tls = yes
smtpd_enforce_tls = no
#smtpd_tls_security_level = encrypt
smtpd_tls_security_level = may
smtpd_tls_loglevel = 1
smtpd_tls_received_header = yes
smtpd_tls_mandatory_ciphers = high
smtpd_tls_exclude_ciphers = aNULL, eNULL, EXPORT, DES, RC4, MD5, PSK, aECDH, EDH-DSS-DES-CBC3-SHA, EDH-RSA-DES-CDC3-SHA, KRB5-DE5, CBC3-SHA
smtpd_tls_mandatory_exclude_ciphers = aNULL, eNULL, MD5, RC4, EXPORT
smtpd_tls_eecdh_grade = strong
smtpd_tls_protocols = TLSv1, !SSLv3, !SSLv2
smtpd_tls_mandatory_protocols = TLSv1, !SSLv3, !SSLv2
smtpd_forbidden_commands = CONNECT
#smtpd_tls_exclude_ciphers = aNULL, eNULL, MD5, RC4, EXPORT
#

zzzPOSTFIXMAINzzz


cat << zzzPOSTFIXMAINzzz > /etc/postfix/header_checks

#
# pro-privacy, anti-spam
# choose the right ones for your email clients
/^Subject: MDN: /				REJECT MDN
#/^Subject: Read-Receipt-To: /			REJECT MDN
#/^Subject: Disposition-Notification-To: /	REJECT MDN
#/^Message-ID: \<receipt/			REJECT MDN
/^Subject: Read: /				REJECT MDN
#
# redirects and discards to un-clog queue
/^(To|Cc|Bcc): root@yourdomain.com\$/		REDIRECT someone.who.cares@yourdomain.com
/^(To|Cc|Bcc): nagios@yourdomain.com\$/		REDIRECT someone.who.cares@yourdomain.com
/^(To|Cc|Bcc): .+@example\.com\$/		DISCARD INVALID_EMAIL
/^(To|Cc|Bcc): .+@test\.com\$/			DISCARD INVALID_EMAIL
/^(To|Cc|Bcc): .+@hotmai\.com\$/			DISCARD INVALID_EMAIL
/^(To|Cc|Bcc): .+@hotmal\.com$/			DISCARD INVALID_EMAIL
/^(To|Cc|Bcc): .+@noemail\.com\$/		DISCARD INVALID_EMAIL
#
# log rfc violation of date
/^Date:.* [AP]M/i				WARN DATE_IN_AM_PM_NOT_24HR
#
# keep some headers out of emails
#/^Received:/					IGNORE
#/^User-Agent:/					IGNORE
# OR
# Remove internal IPs and other data from emails, use syslog for this instead
/^(Received: from)\s+[a-z0-9\.]+\.yourInternalDomain\.com \([a-z0-9z.]+ \[10[0-9\.]+\]\)(.*)/ REPLACE \$1 client (127.0.0.1)\$2
/^(Received.*by)\s+[a-z0-9\.]+\.yourInternalDomain\.com (\(Postfix\).*)/ REPLACE \$1 server \$2
#
# log attachments
/^Content-(Type|Disposition):.*(file)?name=/	WARN ATTACHMENT
/^(.*)name=\"(.*)\./				WARN ATTACHMENT
#
# log subjects
/^Subject:/					WARN
#

zzzPOSTFIXMAINzzz


# bind named config
cat << zzzNAMEDzzz > /etc/named.conf


########################
#
# ACL
acl local {
	127.0.0.1;
	192.168.120.0/24;
};
# ACL
#
########################
options {
        directory "/var/named";
        version none;
	hostname none;
	server-id none;
	allow-query { local; };
        allow-transfer { none; };
        query-source address *;
#        query-source address * port 53;
	recursion yes;
	recursive-clients 96;
	tcp-clients 64;
	minimal-responses yes;
	edns-udp-size 4096;
	max-udp-size 4096;
	allow-recursion { local; };
	allow-query-cache { local; };
	notify no;
	listen-on port 53 { 127.0.0.1; 192.168.120.0/24; };
	listen-on port 953 { 127.0.0.1; 192.168.120.0/24; };
	use-v4-udp-ports { range 16384 65418; };
	use-v6-udp-ports { range 16384 65418; };
	listen-on-v6 { none; };
	empty-zones-enable no;
	disable-empty-zone yes;
	provide-ixfr no;
	request-ixfr no;
	dnssec-enable no;
	dnssec-validation no;
	check-names response ignore;
	cleaning-interval 14400;
	max-cache-size unlimited;
	stacksize unlimited;
	datasize unlimited;
	coresize unlimited;
	max-cache-ttl 518400;
	max-ncache-ttl 30;
	interface-interval 0;
#	statistics-interval 0;
	lame-ttl 300;
#	statistics-file "/var/log/named/dns_stats.txt";
#	memstatistics-file "/var/log/named/mem_stats.txt";
};

controls { inet 127.0.0.1 allow { localhost; }; };
# inet 127.0.0.1 allow { localhost; } keys { rndckey;  };

#
#######################################
# LOGGING

logging {
channel query_logging {
	file "/var/log/named/queries.log" versions 0 size 2M; 
	severity dynamic;
	print-category yes;
	print-severity yes;
	print-time yes;
};
channel my_file {
	file "/var/log/named/named.log" versions 0 size 64K;
	severity dynamic;
	print-category yes;
	print-severity yes;
	print-time yes;
};
channel my_security {
	file "/var/log/named/security.log" versions 0 size 2M;
	severity dynamic;
	print-category yes;
	print-severity yes;
	print-time yes;
};
channel null { null; };
category lame-servers { null; };
category queries { query_logging; };
#category queries { null; };
category security { my_security; };
#category security { null; };
category notify { null; };
category client { null; };
category resolver { null; };
category network { null; };
category default { null; };
};

# you can update using
# dig @e.root-servers.net . ns > /var/named/named.ca
#
zone "." IN {
	type hint;
	file "named.ca";
};

zone "localhost" IN {
	type master;
	file "named.localhost";
	allow-update { none; };
};

zone "0.0.127.in-addr.arpa" IN {
	type master;
	file "named.loopback";
	allow-update { none; };
};

# in case tor browsing leaks to our resolver
zone "onion" IN {
	type master;
	file "named.empty";
	allow-update { none; };
	allow-transfer { none; };
};

zone "tld" {
    type forward;
    forward only;
    forwarders { 192.168.0.2; 192.168.0.3; };
};


zzzNAMEDzzz


mkdir --mode=0700 -p /var/log/named
chown named:named /var/log/named


cat << zzzISSUE1zzz > /etc/issue
****************************************************************************
WARNING - PRIVATE ELECTRONIC DEVICE - UNAUTHORIZED ACCESS PROHIBITED:
This device is a private network device. Any attempt for unauthorized
access will be logged and appropriate legal action will be taken.
Unauthorized use may subject you to criminal prosecution.  Evidence of
any such unauthorized use collected during monitoring may be used for
administrative, criminal or other adverse action. Use of this system
constitutes consent to monitoring for these purposes.

WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored.
****************************************************************************

zzzISSUE1zzz


cat << zzzISSUE2zzz >> /etc/issue
Kickstarted on #${KSDATE}

Role: c7_outbound_proxy

zzzISSUE2zzz


cat /etc/issue > /etc/issue.net
ln /etc/issue /etc/ssh/banner.txt


cat << zzzNTPCONFzzz > /etc/ntp.conf
#${KSDATE}
driftfile /var/lib/ntp/drift
restrict default nomodify notrap nopeer noquery kod
restrict 127.0.0.1 
restrict ::1
restrict 192.168.120.0 mask 255.255.255.0 nomodify notrap
#
# DONT USE THESE, USE STRATUM 1 SERVERS FROM THE EDGE
# server 0.centos.pool.ntp.org iburst
# server 1.centos.pool.ntp.org iburst
# server 2.centos.pool.ntp.org iburst
# server 3.centos.pool.ntp.org iburst
#
server 192.168.120.10 iburst burst
#
#crypto
#includefile /etc/ntp/crypto/pw
keys /etc/ntp/keys
#trustedkey 4 8 42
#requestkey 8
#controlkey 8
# statistics clockstats cryptostats loopstats peerstats
disable monitor
#${KSDATE}

zzzNTPCONFzzz


# yum config
cat << zzzYUMBASEzzz > /etc/yum.repos.d/CentOS-Base.repo
#${KSDATE}
[base]
name=CentOS-\$releasever - Base
baseurl=http://192.168.120.10/mirror/centos/7/os/x86_64
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

#released updates 
[updates]
name=CentOS-\$releasever - Updates
baseurl=http://192.168.120.10/mirror/centos/7/updates/x86_64
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

#additional packages that may be useful
[extras]
name=CentOS-\$releasever - Extras
baseurl=http://192.168.120.10/mirror/centos/7/extras/x86_64
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

[centosplus]
name=CentOS-\$releasever - centosplus
baseurl=http://192.168.120.10/mirror/centos/7/centosplus/x86_64
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

#${KSDATE}
zzzYUMBASEzzz


cat << zzzAUDITRULESzzz > /etc/audit/rules.d/audit.rules

# clear rules
-D

# increase buffer
-b 32768

# rate limit
-r 0

# exclude cwd noise
-a exclude,always -F msgtype=CWD

# 10.2.2
# All actions taken by any individual with root or administrative privileges
#-a exit,always -S all -F euid=0 -F perm=wxa -k root

# 10.2.3
# Access to all audit trails
-a always,exit -S all -F dir=/var/log/audit -F perm=wra -k audit_logs
-w /var/log/secure -p wra -k sys_logs
-w /var/log/messages -p wra -k sys_logs

# 10.2.4
# Invalid logical access attempts
-a always,exit -F arch=b64 -S all -F exit=-13 -k access

# 10.2.7
# Creation and deletion of system level objects, including roots home dir.
-a always,exit -S all -F dir=/root -F perm=wa -k system_mod
-a always,exit -S all -F dir=/etc -F perm=wa -k system_mod
-a always,exit -S all -F dir=/boot -F perm=wa -k system_mod
-a always,exit -S all -F dir=/usr/lib -F perm=wa -k system_mod
-a always,exit -S all -F dir=/bin -F perm=wa -k system_mod
-a always,exit -S all -F dir=/lib -F perm=wa -k system_mod
-a always,exit -S all -F dir=/lib64 -F perm=wa -k system_mod
-a always,exit -S all -F dir=/sbin -F perm=wa -k system_mod
-a always,exit -S all -F dir=/usr/bin -F perm=wa -k system_mod
-a always,exit -S all -F dir=/usr/sbin -F perm=wa -k system_mod

# network connections

# immutable without reboot
-e 2

zzzAUDITRULESzzz


augenrules

sed -i -e 's/^active.*/active = yes/g' /etc/audisp/plugins.d/syslog.conf


cat << zzzSCREENRCzzz > /etc/screenrc
##
## customize or override in ~/.screenrc
##
## Many of these settings you can add/change during run-time with ctrl-a :command
##
##
multiuser off  # only enable this if you need to let others see or use your session
##             # ensure you have mgmt approval to let a coworker see your session
##
aclchg coworker +rx "#?" #enable r/o access to "coworker" to show lmcneil something
aclchg coworker -x "#,at,aclchg,acladd,acldel,quit" # don't allow these
aclchg somesysadmin +rwx "#?" # enable r/w access to "somesysadmin" to assist you
aclchg somesysadmin -x "#,at,aclchg,acladd,acldel,quit" # don't allow them to use these commands
activity "%c activity -> %n%f %t"
altscreen on
attrcolor b ".I"
autodetach on
bell "%c:bell -> %n%f %t^G"
bell_msg "## DING ##"
bind c screen 1 # window numbering starts at 1 not 0
bind 0 select 10
bind s eval 'split' focus screen
bind v eval 'split -v' focus screen
defbce on
defflow off
defmonitor on
defobuflimit 32768
defscrollback 10000
defutf8 on
encoding UTF-8
## you might need to change escape if you use nested ssh/screen sessions
##  or if you want cntrl+a back for emacs
# escape ^zz
hardcopy_append on
hardstatus alwayslastline
hardstatus string '%{.bW}%-w%{.rW}%n %t%{-}%+w %=%{..G} %H %{..Y} %m/%d %c'
hardstatus on
# idle 1800 quit
idle 1800 lockscreen # unlock with your login pw
## dont use logfile if you deal with sensitive information
# logfile ~/.screen_%Y%m%d.log
msgminwait 0
msgwait 2
nethack off
nonblock on
setenv LC_CTYPE en_US.UTF-8
setenv GZIP --rsyncable
## dont idle forever, but idle long enough to get through a weekend.
## execute bash, hyphen means use login so we source our ENVironment.
##  put your favorite shell here.
shell -/bin/bash
startup_message off
term screen-256color
termcapinfo xterm|xterms|xs|rxvt|linux ti@:te@
terminfo rxvt* 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'
vbell off
vbell_msg ""
vbellwait 0
verbose off
## don't kill window after the process died
# zombie "^["
##
##  Note: Start with hyphen on shells to pick up ENV
##        examples are commented out.
##
##          Title    #  Program
  screen -t Shell1   1 -/bin/bash
  screen -t Shell2   2 -/bin/bash
# screen -t Build1   3 ssh -q i-dev006.some.amazonaws.com
# screen -t Build2   4 ssh -q i-dev007.some.amazonaws.com
# screen -t Daily1   5 ssh -q i-dev042.some.amazonaws.com '/some/dir/start_build.sh;sleep 3600'
# screen -t Python   6 python
  select 1

zzzSCREENRCzzz


cat << zzzOSVARSzzz > /etc/profile.d/os_vars.sh
#${KSDATE}
# avoid passwords in history
readonly HISTFILE=/dev/null
# easier to dedupe at block level
readonly GZIP="--rsyncable"
# dont idle forever
readonly TMOUT=259200
export HISTFILE GZIP TMOUT

zzzOSVARSzzz


cat << zzzTCPWRAPPERSDENYzzz > /etc/hosts.deny
#${KSDATE}
ALL : ALL

zzzTCPWRAPPERSDENYzzz


cat << zzzTCPWRAPPERSALLOWzzz > /etc/hosts.allow
#${KSDATE}
sshd : ALL
# rpcbind : 192.168.120.10 192.168.120.11
in.tftpd : 192.168.120.0/255.255.255.0

zzzTCPWRAPPERSALLOWzzz


touch /.autorelabel


# in case we are a laptop, dont hybernate if lid is closed.  We are a server.
sed -i -e 's/.*HandlePowerKey.*/HandlePowerKey=poweroff/g' /etc/systemd/logind.conf
sed -i -e 's/.*HandleSuspendKey.*/HandleSuspendKey=ignore/g' /etc/systemd/logind.conf
sed -i -e 's/.*HandleHibernateKey.*/HandleHibernateKey=ignore/g' /etc/systemd/logind.conf
sed -i -e 's/.*HandleLidSwitch.*/HandleLidSwitch=ignore/g' /etc/systemd/logind.conf

# shutdown faster
sed -i -e 's/.*DefaultTimeoutStopSec.*/DefaultTimeoutStopSec=30s/g' /etc/systemd/system.conf


# systemd pigs
sed -i -e 's/.*SystemMaxUse.*/SystemMaxUse=40M/g' /etc/systemd/journald.conf
sed -i -e 's/.*RuntimeMaxUse.*/RuntimeMaxUse=10M/g' /etc/systemd/journald.conf

# Docker use OverlayFS and avoid the big devicemapper file
sed -i -e 's/DOCKER_STORAGE_OPTIONS.*/DOCKER_STORAGE_OPTIONS= --storage-driver=overlay/g' /etc/sysconfig/docker-storage
echo "overlay" > /etc/modules-load.d/overlay.conf

if [ -f /etc/crontab ] && [ -f /etc/postfix/aliases ] ; then
sed -i -e 's/root/devnull/g' /etc/crontab
else
sed -i -e 's/root//g' /etc/crontab
fi

if [ -f /etc/cron.d/0hourly ] && [ -f /etc/postfix/aliases ] ; then
sed -i -e 's/root/devnull/g' /etc/cron.d/0hourly
else
sed -i -e 's/root//g' /etc/cron.d/0hourly
fi

if [ -f /etc/postfix/aliases ] ; then
printf "devnull:\t\t/dev/null" >> /etc/postfix/aliases
postmap /etc/postfix/aliases
fi
if [ -f /etc/aliases ] ; then
printf "devnull:\t\t/dev/null" >> /etc/aliases
fi


cat << zzzEPELREPOzzz > /etc/yum.repos.d/EPEL.repo
[EPEL]
name=EPEL
baseurl=http://192.168.120.10/mirror/epel/7/x86_64
gpgcheck=1
gpgkey=http://192.168.120.10/mirror/RPM-GPG-KEY-EPEL-7

zzzEPELREPOzzz


rpm --import http://192.168.120.10/mirror/RPM-GPG-KEY-CentOS-7
rpm --import http://192.168.120.10/mirror/RPM-GPG-KEY-EPEL-7

# in the event we use nfs
echo "RPCNFSDCOUNT=255" > /etc/sysconfig/nfs
echo "LOCKD_TCPPORT=32767" >> /etc/sysconfig/nfs
echo "LOCKD_UDPPORT=32767" >> /etc/sysconfig/nfs
echo "MOUNTD_PORT=892" >> /etc/sysconfig/nfs
echo "RQUOTAD_PORT=875" >> /etc/sysconfig/nfs
echo "STATD_PORT=662" >> /etc/sysconfig/nfs
echo "STATD_OUTGOING_PORT=2020" >> /etc/sysconfig/nfs

echo "NETWORKING_IPV6=no" >> /etc/sysconfig/network
echo "NOZEROCONF=yes" >> /etc/sysconfig/network
echo "IPV6INIT=no" >> /etc/sysconfig/network


grubby --update-kernel=ALL --remove-args="consoleblank nohz highres edd selinux audit crashkernel elevator intel_idle.max_cstate processor.max_cstate nohalt idle acpi_pad.disable nicdelay linksleep rhgb quiet LANG rd_NO_MD vga"

grubby --update-kernel=ALL --args="consoleblank=0 edd=off selinux=1 audit=1 elevator=noop noparport text acpi_pad.disable=1 rd_NO_MD LANG=en_US.UTF-8"


# attack surface does not apply if sudo is unrestricted
groupadd -g 99500 docker
usermod -G docker ohadmin

pwck -s
grpck -s

#network_intr=`ip addr | grep 192\.168\.120 | awk {'print $NF'}`
#network_cidr=`ip addr | grep 192\.168\.120 | awk {'print $2'}`
#network_addr=`ip addr | grep 192\.168\.120 | awk {'print $2'} | awk -F "/" {'print $1'}`
#printf "IPADDR=${network_addr}\n" >> /etc/sysconfig/network-scripts/ifcfg-${network_intr}
#ipcalc -m ${network_cidr} >> /etc/sysconfig/network-scripts/ifcfg-${network_intr}
#ipcalc -b ${network_cidr} >> /etc/sysconfig/network-scripts/ifcfg-${network_intr}
#sed -i -e 's/IPV6INIT.*/IPV6INIT=no/g' /etc/sysconfig/network-scripts/ifcfg-${network_intr}
#sed -i -e 's/BOOTPROTO.*/BOOTPROTO=static/g' /etc/sysconfig/network-scripts/ifcfg-${network_intr}

touch /.autorelabel


# set a quota in /home 
xfs_quota -x -c 'limit -g bsoft=256m bhard=400m isoft=220 ihard=400 users' /home
xfs_quota -x -c 'limit bsoft=64m bhard=128m isoft=120 ihard=200 ohadmin' /home
# xfs_quota -x -c 'report -h' /home


# useless for a server but required due to .spec so lets nullify
for logo in `rpm -ql centos-logos`; do if [ -f ${logo} ] ; then cat /dev/null > ${logo}; fi done

# these shouldnt exist
# rpm -e `rpm -qa --qf "%{NAME}.%{ARCH}\n" | egrep -v 'x86_64|noarch|none'`

## UNCOMMENT the following to free up about 150MB of the base image.
## CAVEAT: Updating glibc will put that 150MB right back, so you would
##         have to run these commands again and it will terminate your
##         shell once, right as you do it.
##
## prune locale, preserve only ^en
localedef --list-archive | grep -v -i ^en | xargs localedef --delete-from-archive
mv -f /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl
build-locale-archive && rm -Rf /usr/share/locale/[a-c]* /usr/share/locale/[f-k]* /usr/share/locale/[m-z]*

yum clean all
rm -Rf /var/log/journal
rm -f /tmp/*
rm -Rf /tmp/.[0-Z]*

printf "\n\nPost steps completed.\n\n"

%end
# END POST

%addon com_redhat_kdump --disable

%end

# reboot after build, or poweroff
reboot
#poweroff
